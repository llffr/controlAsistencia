CREATE DATABASE SISTEMACONTROLACCESO
GO
USE SISTEMACONTROLACCESO
GO

set dateformat dmy

CREATE TABLE CARGO(
    IDCARGO INT IDENTITY PRIMARY KEY,
    NOMCARGO VARCHAR(100))
GO

CREATE TABLE PERSONA(
IDPER INT IDENTITY,
DNI VARCHAR(10) PRIMARY KEY,
NOMBRE varchar(100),
APELLIDOS varchar(100),
TELF VARCHAR(20),
IDCARGO INT FOREIGN KEY REFERENCES CARGO(IDCARGO),
SECCION INT default 1,
SUBSECCION INT default 1,
ESTADO BIT DEFAULT 1)
GO

CREATE TABLE CONTROLASISTENCIA(
IDCONTROL INT IDENTITY PRIMARY KEY,
DNI VARCHAR(10) FOREIGN KEY REFERENCES PERSONA(DNI),
DNIBARRA VARCHAR(100),
H_ING1 DATETIME,
H_ING2 DATETIME,
H_SAL1 DATETIME,
H_SAL2 DATETIME,
FECHAING DATE DEFAULT GETDATE())
GO

INSERT INTO CARGO VALUES('ADMINISTRADOR');
INSERT INTO CARGO VALUES('OPERADOR');
INSERT INTO CARGO VALUES('SECRETARIA');

INSERT INTO persona (DNI, NOMBRE, APELLIDOS, TELF, IDCARGO, SECCION, SUBSECCION, ESTADO, clave)
VALUES
('33334444', 'Pedro', 'Perez', '99983231', 1, 1, 1, 1, 'root'),
('23456789', 'Lucia', 'Diaz', '999888770', 8, 4, 2, 1, NULL),
('32198765', 'Elena', 'Gutierrez', '999888772', 6, 3, 2, 1, NULL),
('34567890', 'Ricardo', 'Fernandez', '999888769', 9, 5, 1, 1, NULL),
('45678912', 'Luis', 'Lopez', '999888775', 3, 2, 1, 1, NULL),
('65432198', 'Maria', 'Martinez', '999888774', 4, 2, 2, 1, NULL),
('78912345', 'Carlos', 'Sanchez', '999888773', 5, 3, 1, 1, NULL),
('87654321', 'Ana', 'Garcia', '999888776', 2, 1, 2, 1, 'root'),
('98765432', 'Jose', 'Romero', '999888771', 7, 4, 1, 1, NULL);

INSERT INTO CONTROLASISTENCIA  (DNI, DNIBARRA, H_ING1, H_ING2, H_SAL1, H_SAL2, FECHAING)
VALUES
('12345678', '123456789123', '2024-01-10 08:00:00.000', '2024-01-10 13:00:00.000', '2024-01-10 12:00:00.000', '2024-01-10 17:00:00.000', '2024-10-01'),
('87654321', '876543219876', '2024-01-10 08:15:00.000', '2024-01-10 13:15:00.000', '2024-01-10 12:15:00.000', '2024-01-10 17:15:00.000', '2024-10-01'),
('45678912', '456789124567', '2024-02-10 08:05:00.000', '2024-02-10 13:05:00.000', '2024-02-10 12:05:00.000', '2024-02-10 17:05:00.000', '2024-10-02'),
('65432198', '654321986543', '2024-02-10 08:10:00.000', '2024-02-10 13:10:00.000', '2024-02-10 12:10:00.000', '2024-02-10 17:10:00.000', '2024-10-02'),
('78912345', '789123459123', '2024-03-10 08:00:00.000', '2024-03-10 13:00:00.000', '2024-03-10 12:00:00.000', '2024-03-10 17:00:00.000', '2024-10-03'),
('32198765', '321987655678', '2024-03-10 08:20:00.000', '2024-03-10 13:20:00.000', '2024-03-10 12:20:00.000', '2024-03-10 17:20:00.000', '2024-10-03'),
('98765432', '987654321234', '2024-04-10 08:25:00.000', '2024-04-10 13:25:00.000', '2024-04-10 12:25:00.000', '2024-04-10 17:25:00.000', '2024-10-04'),
('23456789', '234567891234', '2024-04-10 08:30:00.000', '2024-04-10 13:30:00.000', '2024-04-10 12:30:00.000', '2024-04-10 17:30:00.000', '2024-10-04'),
('34567890', '345678905678', '2024-05-10 08:00:00.000', '2024-05-10 13:00:00.000', '2024-05-10 12:00:00.000', '2024-05-10 17:00:00.000', '2024-10-05'),

--nuevo cargo en dbo.CARGO. Verifica si el cargo ya existe
CREATE PROC sp_registrarCargo
@NOMCAR VARCHAR(100)
AS
IF (SELECT COUNT(*) FROM CARGO WHERE NOMCARGO=@NOMCAR)>0
BEGIN
    PRINT 'ESTE CARGO YA ESTA REGISTRADO'
END
ELSE
BEGIN
    INSERT INTO CARGO(NOMCARGO) VALUES(@NOMCAR)
END

--nueva persona en dbo.PERSONA. Verifica si la persona ya está registrada utilizando su nombre
create PROC sp_registrarPersonal
@DNI varchar(10),
@NOM varchar(100),
@APE varchar(100),
@TELE varchar(20),
@IDCARGO INT
AS
IF (SELECT COUNT(*) FROM PERSONA WHERE NOMBRE=@NOM)>0
BEGIN
PRINT 'EL PERSONAL YA SE ENCUENTRA REGISTRADO'
END
ELSE
BEGIN
INSERT INTO PERSONA (DNI,NOMBRE,APELLIDOS,TELF,IDCARGO)values(@DNI,@NOM,@APE,@TELE,@IDCARGO)
END

--muestra todos los cargos registrados
CREATE PROC PA_LISTARCARGO
AS
BEGIN
SELECT * FROM CARGO
END

--Elimina un cargo de dbo.CARGO utilizando el ID del cargo como variable
CREATE PROC eliminarCargo
@COD INT
AS
BEGIN
DELETE FROM CARGO WHERE IDCARGO=@COD
END

--muestra personal de empleados y cargo. unión entre dbo.PERSONA y dbo.CARGO para obtener el nombre del cargo asociado a cada persona.
CREATE PROC pa_listarPersonal
AS
SELECT IDPER,DNI,NOMBRE,APELLIDOS,TELF,c.NOMCARGO,ESTADO FROM dbo.PERSONA p INNER JOIN CARGO c ON p.IDCARGO=C.IDCARGO

--actualiza info del personal - dni no debe cambiar
CREATE PROC sp_actualizarPersonal
@DNI VARCHAR(10),
@NOM VARCHAR(100),
@APE VARCHAR(100),
@TELE VARCHAR(20),
@IDCARGO INT
AS
BEGIN
IF (SELECT COUNT(*) FROM PERSONA WHERE DNI = @DNI) = 0
BEGIN
PRINT 'LA PERSONA NO EXISTE'
    END
ELSE
BEGIN
UPDATE PERSONA
SET NOMBRE = @NOM,
APELLIDOS = @APE,
TELF = @TELE,
IDCARGO = @IDCARGO
WHERE DNI = @DNI
PRINT 'DATOS DE LA PERSONA ACTUALIZADOS CORRECTAMENTE'
END
END

--
create proc sp_registroAsistenciaPersonal
@DNI VARCHAR(10)
AS
DECLARE @DIA INT,@MES INT,@ANHO INT,@CANT INT,@COD INT
SET  @DIA=(SELECT DATEPART(DD,GETDATE()))
SET  @MES=(SELECT DATEPART(MM,GETDATE()))
SET  @ANHO=(SELECT DATEPART(YY,GETDATE()))
SET @CANT=(SELECT COUNT(*) FROM CONTROLASISTENCIA WHERE DNI=@DNI and DATEPART(DD,H_ING1)=@DIA 
AND DATEPART(MM,H_ING1)=@MES AND DATEPART(YY,H_ING1)=@ANHO)
SET @COD=(SELECT IDCONTROL FROM CONTROLASISTENCIA WHERE DNI=@DNI and DATEPART(DD,H_ING1)=@DIA 
AND DATEPART(MM,H_ING1)=@MES AND DATEPART(YY,H_ING1)=@ANHO)
IF @CANT=0
	BEGIN
		INSERT INTO CONTROLASISTENCIA (DNI,H_ING1) VALUES(@DNI,GETDATE())
	END
	ELSE
	BEGIN
	SET @CANT =(SELECT COUNT(*) FROM CONTROLASISTENCIA WHERE IDCONTROL=@COD AND H_SAL1 IS NULL)
		IF @CANT=1
		BEGIN
			UPDATE CONTROLASISTENCIA SET H_SAL1=GETDATE() WHERE IDCONTROL=@COD
		END
		ELSE
		BEGIN
			SET @CANT =(SELECT COUNT(*) FROM CONTROLASISTENCIA WHERE IDCONTROL=@COD AND H_ING2 IS NULL)
			IF @CANT=1
			BEGIN
				UPDATE CONTROLASISTENCIA SET H_ING2=GETDATE() WHERE IDCONTROL=@COD
			END
			ELSE
			BEGIN
				UPDATE CONTROLASISTENCIA SET H_SAL2=GETDATE() WHERE IDCONTROL=@COD
		END
	END
END

alter PROC pa_filtrarDatosPersonal
@dni varchar(10)
AS
BEGIN
    -- -- Verificar si el DNI existe
    -- IF (SELECT COUNT(*) FROM PERSONA WHERE DNI = @dni) = 0
    -- BEGIN
    --     PRINT 'El personal con el DNI proporcionado no está registrado.'
    -- END
    -- ELSE
    -- BEGIN
    --     -- Retorna más información sobre la persona, incluyendo cargo y estado
    --     SELECT p.NOMBRE, p.APELLIDOS, p.TELF, c.NOMCARGO
    --     FROM PERSONA p
    --     INNER JOIN CARGO c ON p.IDCARGO = c.IDCARGO
    --     WHERE p.DNI = @dni
    -- END
select concat(NOMBRE,' ',APELLIDOS) as datos from PERSONA where DNI=@dni
END

alter proc pa_consultaAsistenciaDNI
	@dni varchar(20)
	as begin
	SELECT C.DNI,APELLIDOS,NOMBRE,CONVERT(VARCHAR(10), H_ING1,103)AS FECHA,
	--H_ING1
	CAST(DATEPART(HOUR, H_ING1)AS CHAR(2))+':'+CAST(DATEPART(MINUTE, H_ING1)AS CHAR(2))+':'+CAST(DATEPART(SECOND, H_ING1)AS CHAR(2))AS[HH:MM:SS],
	--H_SAL1
	CAST(DATEPART(HOUR, H_SAL1)AS CHAR(2))+':'+CAST(DATEPART(MINUTE, H_SAL1)AS CHAR(2))+':'+CAST(DATEPART(SECOND, H_SAL1)AS CHAR(2))AS[HH:MM:SS],
	--H_ING2
	CAST(DATEPART(HOUR, H_ING2)AS CHAR(2))+':'+CAST(DATEPART(MINUTE, H_ING2)AS CHAR(2))+':'+CAST(DATEPART(SECOND, H_ING2)AS CHAR(2))AS[HH:MM:SS],
	--H_SAL2
	CAST(DATEPART(HOUR, H_SAL2)AS CHAR(2))+':'+CAST(DATEPART(MINUTE, H_SAL2)AS CHAR(2))+':'+CAST(DATEPART(SECOND, H_SAL2)AS CHAR(2))AS[HH:MM:SS]
	FROM CONTROLASISTENCIA C INNER JOIN PERSONA P
	ON C.DNI=P.DNI where c.DNI=@dni
end

--
alter PROCEDURE pa_consultasFecha
@F1 DATE, @F2 DATE
AS
BEGIN
    SELECT P.DNI, CONCAT(P.NOMBRE, ' ', P.APELLIDOS) AS EMPLEADO, 
           CA.H_ING1, CA.H_SAL1, CA.H_ING2, CA.H_SAL2, CA.FECHAING, C.NOMCARGO
    FROM CONTROLASISTENCIA CA
    INNER JOIN PERSONA P ON CA.DNI = P.DNI
    INNER JOIN CARGO C ON P.IDCARGO = C.IDCARGO
    WHERE CA.FECHAING BETWEEN @F1 AND @F2
    ORDER BY CA.FECHAING ASC
END

exec pa_consultasFecha '01/10/2024','15/10/2024'

select * from dbo.CONTROLASISTENCIA
